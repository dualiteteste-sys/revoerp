/*
          # [Operation Name]
          Cria a função `get_contratos_para_faturar`

          ## Query Description: [This operation creates a new SQL function required by the application's invoicing module. It safely adds the `get_contratos_para_faturar` function, which is used to identify active monthly contracts eligible for billing in a given month and year. This is a non-destructive, structural change.]
          
          ## Metadata:
          - Schema-Category: ["Structural"]
          - Impact-Level: ["Low"]
          - Requires-Backup: [false]
          - Reversible: [true]
          
          ## Structure Details:
          - Creates the function: `public.get_contratos_para_faturar(p_ano integer, p_mes integer)`
          
          ## Security Implications:
          - RLS Status: [Not Applicable]
          - Policy Changes: [No]
          - Auth Requirements: [None]
          - Search Path: Set to an empty string for security.
          
          ## Performance Impact:
          - Indexes: [An index on `situacao`, `periodicidade`, and `data_contrato` on the `contratos` table could improve performance.]
          - Triggers: [Not Applicable]
          - Estimated Impact: [Low. The function reads from the 'contratos' table. Performance depends on the number of contracts.]
          */
CREATE OR REPLACE FUNCTION public.get_contratos_para_faturar(p_ano integer, p_mes integer)
RETURNS SETOF contratos
LANGUAGE sql STABLE
SECURITY DEFINER
SET search_path = ''
AS $$
    -- Lógica de MVP: Seleciona contratos ativos com periodicidade MENSAL que já estavam vigentes no início da competência.
    -- Lógicas para outras periodicidades (bimestral, trimestral, etc.) podem ser adicionadas posteriormente.
    SELECT *
    FROM public.contratos
    WHERE situacao = 'ATIVO'
      AND periodicidade = 'MENSAL'
      AND data_contrato <= make_date(p_ano, p_mes, 1);
$$;
